name: CI-CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Melhor prática: Compilar e testar a aplicação antes de criar a imagem
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven' # ou 'gradle'

      - name: Build and test with Maven
        run: mvn -B package --file pom.xml

      # Login no Docker Hub
       name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Melhor prática: Usar metadata-action para gerar tags dinâmicas
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/appjava

      # Indentação corrigida e versionamento melhorado
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  CD:
    needs: [CI]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Iniciando o deploy..."
      - run: echo "Deploy da imagem ${{ vars.DOCKERHUB_USERNAME }}/appjava com as tags geradas no passo de CI"

